{:rename-macros {}, :renames {}, :externs {document {getElementById {}}}, :use-macros {}, :excludes #{}, :name website.core, :imports nil, :requires {reagent reagent.core, reagent.core reagent.core, secretary secretary.core, secretary.core secretary.core, accountant accountant.core, accountant.core accountant.core, website.tobbar website.tobbar, website.home website.home}, :cljs.spec/speced-vars [], :uses {atom reagent.core, home-page website.home, topbar website.tobbar}, :defs {page {:name website.core/page, :file "/home/didier/clojupyter/website/src/cljs/website/core.cljs", :line 12, :column 1, :end-line 12, :end-column 14, :meta {:file "/home/didier/clojupyter/website/src/cljs/website/core.cljs", :line 12, :column 10, :end-line 12, :end-column 14}, :tag any}, current-page {:protocol-inline nil, :meta {:file "/home/didier/clojupyter/website/src/cljs/website/core.cljs", :line 14, :column 7, :end-line 14, :end-column 19, :arglists (quote ([]))}, :name website.core/current-page, :variadic false, :file "/home/didier/clojupyter/website/src/cljs/website/core.cljs", :end-column 19, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 14, :end-line 14, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, mount-root {:protocol-inline nil, :meta {:file "/home/didier/clojupyter/website/src/cljs/website/core.cljs", :line 29, :column 7, :end-line 29, :end-column 17, :arglists (quote ([]))}, :name website.core/mount-root, :variadic false, :file "/home/didier/clojupyter/website/src/cljs/website/core.cljs", :end-column 17, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 29, :end-line 29, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, init! {:protocol-inline nil, :meta {:file "/home/didier/clojupyter/website/src/cljs/website/core.cljs", :line 32, :column 7, :end-line 32, :end-column 12, :arglists (quote ([]))}, :name website.core/init!, :variadic false, :file "/home/didier/clojupyter/website/src/cljs/website/core.cljs", :end-column 12, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 32, :end-line 32, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :cljs.spec/registry-ref [], :require-macros {reagent reagent.core, reagent.core reagent.core, secretary secretary.core, secretary.core secretary.core}, :cljs.analyzer/constants {:seen #{:path-exists? :div.columns :ns :name home-page :file :end-column :div.column.is-offset-1.is-10 :column :div :line website.home :end-line :br :arglists website.home/home-page :doc :nav-handler :test}, :order [website.home/home-page :ns :name :file :end-column :column :line :end-line :arglists :doc :test website.home home-page :div :div.columns :div.column.is-offset-1.is-10 :br :nav-handler :path-exists?]}, :doc nil}